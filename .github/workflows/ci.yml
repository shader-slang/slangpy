name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows, linux]
        python: ["3.10"]
        include:
          - { os: windows, runs-on: { group: nvrgfx, labels: [Windows, X64] } }
          - { os: linux, runs-on: { group: nvrgfx, labels: [Linux, X64] } }
  
    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      # Environment variables used by ci.py
      CI_PYTHON: ${{ matrix.python }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Install dependencies
        run: python .build_agent/ci.py dependencies

      - name: Run precommit
        run: python .build_agent/ci.py precommit

      - name: Install slangpy
        run: python .build_agent/ci.py install

      - name: Run tests (vulkan / native)
        run: python .build_agent/ci.py test --device=vulkan

      - name: Run tests (d3d12 / native)
        if: matrix.os=='windows'
        run: python .build_agent/ci.py test --device=d3d12

      - name: Unit Test Report
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '*-junit.xml'

      - name: Cleanup
        if: always()
        run: python .build_agent/ci.py cleanup

