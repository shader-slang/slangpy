name: ci

on:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - "LICENSES/**"
      - "LICENSE"
      - "**.md"
      - .github/workflows/wheels.yml
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - "LICENSES/**"
      - "LICENSE"
      - "**.md"
      - .github/workflows/wheels.yml

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os: [linux]
        platform: [x86_64]
        compiler: [gcc]
        config: [Debug, Release]
        python: ["3.10"]
        include:
          # Builds running on self-hosted runners (build + tests + coverage)
          - { os: linux, platform: x86_64, compiler: gcc, config: Debug, flags: "unit-test,header-validation,coverage", runs-on: { group: nvrgfxstage, labels: [Linux, X64] } }
          - { os: linux, platform: x86_64, compiler: gcc, config: Release, flags: "unit-test", runs-on: { group: nvrgfxstage, labels: [Linux, X64] } }

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      # Environment variables used by ci.py
      CI_OS: ${{ matrix.os }}
      CI_PLATFORM: ${{ matrix.platform }}
      CI_COMPILER: ${{ matrix.compiler }}
      CI_CONFIG: ${{ matrix.config }}
      CI_PYTHON: ${{ matrix.python }}
      CI_FLAGS: ${{ matrix.flags }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Cleanup submodules # Fix for https://github.com/actions/checkout/issues/358
        run: |
          git submodule foreach --recursive git clean -ffdx
          git submodule foreach --recursive git reset --hard

      # Setup Linux.
      - name: Setup Linux
        if: startsWith(matrix.os, 'linux') && contains(matrix.runs-on, 'ubuntu-')
        run: |
          sudo apt update && sudo apt install -y libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config

      # Setup Python.
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      # Setup Python environment.
      - name: Setup Python environment
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install pytest-github-actions-annotate-failures

      # Setup MSVC.
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      # Setup CMake/Ninja.
      - name: Setup CMake/Ninja
        uses: lukka/get-cmake@latest

      # Setup.
      - name: Setup
        run: python tools/ci.py setup

      # Setup vcpkg caching.
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      # Configure.
      - name: Configure
        run: python tools/ci.py configure

      # Build.
      - name: Build
        run: python tools/ci.py build

      # Typing Checks (Python)
      - name: Typing Checks (Python)
        run: python tools/ci.py typing-check-python

      # Unit Tests (C++)
      - name: Unit Tests (C++)
        if: contains(matrix.flags, 'unit-test')
        run: python tools/ci.py unit-test-cpp

      # Unit Tests (Python)
      - name: Unit Tests (Python)
        if: contains(matrix.flags, 'unit-test')
        run: python tools/ci.py unit-test-python

      # Unit Test Report
      - name: Unit Test Report
        uses: mikepenz/action-junit-report@v4
        if: contains(matrix.flags, 'unit-test')
        with:
          report_paths: 'reports/*-junit.xml'
          check_name: "Unit Test Report"

      # Generate Coverage Report
      - name: Generate Coverage Report
        if: contains(matrix.flags, 'coverage')
        run: python tools/ci.py coverage-report

      # Coverage Report
      - name: Coverage Report
        uses: actions/upload-artifact@v4
        if: contains(matrix.flags, 'coverage')
        with:
          name: coverage-report
          path: reports/coverage.html
